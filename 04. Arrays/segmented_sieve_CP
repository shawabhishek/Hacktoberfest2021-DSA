#include<bits/stdc++.h>
using namespace std;
const int n=1000000;
bool arr[n+1];
void sieve(){
    memset(arr,true,sizeof(arr));
    arr[0]=arr[1]=false;
    for(int i=2;i*i<=n;i++){
        if(arr[i]==true){
        for(int j=i*i;j<=n;j=j+i){
                arr[j]=false;
        }}
    }
}
vector<int> generatePrime(int n){
    vector <int> prime;
    for(int i=2;i<=n;i++){
        if(arr[i]){
            prime.push_back(i);
        }
    }
    return prime;
}
int main()
{
    int t;
    cin>>t;
    sieve();
    while(t--){
        int l,r;
        cin>>l>>r;
        vector<int> prime=generatePrime(sqrt(r));
        int dummy[r-l+1];
        memset(dummy,1,sizeof(dummy));
        for(auto i: prime){
            int firstMultiple=(l/i)*i;
            if(firstMultiple<l)firstMultiple+=i;

            for(int j=max(firstMultiple,i*i);j<=r;j+=i){
                dummy[j-l]=0;
            }
        }
        for(int i=l;i<=r;i++){
            if(dummy[i-l]==1){
                cout<<i<<" ";
            }
        }
    }
    return 0;
}
